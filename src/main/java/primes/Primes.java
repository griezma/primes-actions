/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package primes;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Primes {

    public static long nextPrime(long from) {
        if (from < 2) {
            return 2;
        }
        long begin = from % 2 == 0 ? from + 1 : from + 2;
        for (long candidate = begin;; candidate += 2) {
            if (isPrime(candidate)) {
                return candidate;
            }
        }
    }

    public static boolean isPrime(Number number) {
        long candidate = number.longValue();

        if (candidate == 0 || candidate == 1) {
            return false;
        }

        if (candidate == 2 ) {
            return true;
        }

        if (candidate % 2 == 0) {
            return false;
        }

        final int upperLimit = (int)Math.sqrt(candidate);

        for (int i = 3; i <= upperLimit; i += 2) {
            if (candidate % i == 0) {
                return false;
            }
        }
        return true;
    }

    public static List<Number> factors(long number) {
        if (number < 2) {
            return Collections.emptyList();
        }
        List<Number> result = new ArrayList<>();

        long rest = number;
        for (long prime = 2; prime <= number; prime = nextPrime(prime)) {
            while (rest % prime == 0) {
                result.add(prime);
                rest /= prime;
                if (rest == 1) {
                    return result;
                }
                if (isPrime(rest)) {
                    result.add(rest);
                    return result;
                }
            }
        }
        return result;
    }
}
